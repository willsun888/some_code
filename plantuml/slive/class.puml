@startuml slive-class

!include https://unpkg.com/plantuml-style-c4@latest/core.puml
' uncomment the following line and comment the first to use locally
'!include core.puml
!include https://unpkg.com/plantuml-style-c4@latest/class-diagram-helper.puml
' uncomment the following line and comment the first to use locally
'!include class-diagram-helper.puml

GREY_ARROW

interface protocol.rtmp.Session {
	Close()
	ReadConnect() error
	RemoteAddr() string
	SessionInfo() SessionInfo
}

interface protocol.rtmp.ServerSession {
    HandshakeServer() error
	ReadPacket() (*avdata.Packet, error)
	ReadHeaders() ([]avdata.Header, error)
	IsPublishing() bool
	IsPlaying() bool
	VideoResolution(headers []avdata.Header) (uint32, uint32)
}

interface protocol.rtmp.ClientSession {
    Dial(url string) error
	HandshakeClient() error
	ConnectPublish() error 
	ConnectPlay() error
	WritePacket(pkt avdata.Packet) error
	WriteHeaders(headers []avdata.Header) error
}

class protocol.rtmp.serverSession {

}
class protocol.rtmp.clientSession {

}

interface server.Handler {
    Serve(conn net.Conn)
}

class server.RTMPServer {
}

class server.Server {
    ListenAndServe(ctx context.Context, opts ...ListenServeOption) error
}

class protocol.rtmp.Conn {
    NewConn(conn net.Conn) error
}

interface stream.Streamer {
	Prepare() error
	Stop()
	Cycle()
	Demuxer() av.Demuxer
	Muxer() av.Muxer
	Name() string
	Role() string
}
package av #DDDDDD {
	interface av.CodecData {}
	interface av.Muxer {}
	interface av.Demuxer {}
	class av.Packet {}
}

interface protocol.rtmp.Hook #DDDDDD {
	OnPrepare() error
	OnPublish() error
	OnUnPublish() error
	OnPlay() error
}

protocol.rtmp.ServerSession..|>protocol.rtmp.Session
protocol.rtmp.ClientSession..|>protocol.rtmp.Session
server.Handler<|..server.RTMPServer
server.Handler<|..server.HTTPFLVServer
server.Handler<|..server.AdminServer
server.RTMPServer<--server.Server
server.HTTPFLVServer<--server.Server
server.AdminServer<--server.Server
stream.Streamer<--server.RTMPServer
stream.Streamer<|..stream.RTMPIngester
stream.Streamer<|..stream.RTMPPublisher
stream.Streamer<|..stream.RTMPPlayer
stream.Streamer<|..stream.RTMPForwarder
stream.Streamer<--server.RTMPClient
stream.QueueCursor<-stream.Queue
stream.Queue<--stream.RTMPIngester
stream.Queue<--stream.RTMPPublisher
stream.QueueCursor<--stream.RTMPPlayer
stream.QueueCursor<--stream.RTMPForwarder
stream.RTMPReceiver-->stream.RTMPPublisher
stream.RTMPReceiver-->stream.RTMPPlayer
stream.RTMPPlayer-->protocol.rtmp.ServerSession
stream.RTMPPublisher-->protocol.rtmp.ServerSession
stream.RTMPIngester-->protocol.rtmp.ClientSession
stream.RTMPForwarder-->protocol.rtmp.ClientSession
protocol.rtmp.ServerSession<|..protocol.rtmp.serverSession
protocol.rtmp.ClientSession<|..protocol.rtmp.clientSession
protocol.rtmp.clientSession-->protocol.rtmp.Conn
protocol.rtmp.serverSession-->protocol.rtmp.Conn
protocol.rtmp.Conn-->av.CodecData
protocol.rtmp.Conn-->av.Packet
protocol.rtmp.Conn-->protocol.rtmp.Hook

@enduml